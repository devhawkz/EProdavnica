@inject IProizvodService ProizvodService;
@implements IDisposable

@if(ProizvodService.Proizvodi == null || ProizvodService.Proizvodi.Count == 0)
{
    <span>@ProizvodService.Poruka</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var proizvod in ProizvodService.Proizvodi)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/proizvod/@proizvod.Id">
                        <img class="media-img" src="@proizvod.SlikaUrl" alt="@proizvod.Naziv" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/proizvod/@proizvod.Id">
                        <h4 class="mb-0">@proizvod.Naziv</h4>
                    </a>
                    <p>@proizvod.Opis</p>
                    <h5 class="price">@GetCenaText(proizvod)</h5>
                </div>
            </li>
        }

    </ul>
    //petlja koja broji strane od 1 do poslednje strane
    @for(var i = 1; i <= ProizvodService.UkupanBrojStrana; i++)
    {
        // i predstavlja broj strane ako je jednak sa trenutnom stranom koristi prvu css klasu ako nije koristi drugu css klasu
        <a class="btn
                    @(i == ProizvodService.TrenutnaStrana ? "btn-info" : "btn-outline-info") 
                    page-selection"
                    href ="/pretraga/@ProizvodService.PoslednjiTekstPretrage/@i">@i</a>
    }
}



@code {

    protected override void OnInitialized()
    {
        ProizvodService.PromenaProizvoda += StateHasChanged; 
    }

    public void Dispose()
    {
        ProizvodService.PromenaProizvoda -= StateHasChanged;
    }

    private string GetCenaText(Proizvod proizvod)
    {
        var varijante = proizvod.Varijante;

        if (varijante.Count == 0)
            return string.Empty;

        else if (varijante.Count == 1)
            return $"${varijante[0].Cena}";

        decimal minCena = varijante.Min(v => v.Cena);
        return $"Početna cena je: ${minCena}";

    }
}
